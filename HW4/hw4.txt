CS131 Homework 4

To illustrate the performance difference on kenken/3 and plain_kenken/3, we can measure the performance with an example of N=3. Given an example as:
    kenken_3_testcase(
        3, 
        [
            -(1, [1|1], [1|2]),
            *(2, [[2|1], [2|2], [3|2]]),
            +(3, [[3|1]]),
            +(1, [[1|3]]),
            -(1, [2|3], [3|3])
        ]
    ).
and with statistics/2 fucntion, we can get the result of each:

>   | ?- statistics(cpu_time, [SinceStart, SinceLast]), kenken_3_testcase(N, C), kenken(N, C, T).

    C = [-(1,[1|1],[1|2]),2*[[2|1],[2|2],[3|2]],3+[[3|1]],1+[[1|3]],-(1,[2|3],[3|3])]
    N = 3
    SinceLast = 0
    SinceStart = 851050
    T = [[2,3,1],[1,2,3],[3,1,2]] ? 


>   | ?- statistics(cpu_time, [SinceStart, SinceLast]), kenken_3_testcase(N, C), plain_kenken(N, C, T).

    C = [-(1,[1|1],[1|2]),2*[[2|1],[2|2],[3|2]],3+[[3|1]],1+[[1|3]],-(1,[2|3],[3|3])]
    N = 3
    SinceLast = 2
    SinceStart = 851052
    T = [[2,3,1],[1,2,3],[3,1,2]] ? 

The performance difference may not be signification with the example N=3, but if we try both with an example N=4 as:
    kenken_4_testcase(
        4,
        [
        +(6, [[1|1], [1|2], [2|1]]),
        *(96, [[1|3], [1|4], [2|2], [2|3], [2|4]]),
        -(1, [3|1], [3|2]),
        -(1, [4|1], [4|2]),
        +(8, [[3|3], [4|3], [4|4]]),
        *(2, [[3|4]])
        ]
    ).
and the performance of each:

>   | ?- statistics(cpu_time, [SinceStart, SinceLast]), kenken_4_testcase(N, C), kenken(N, C, T).      

    C = [6+[[1|1],[1|2],[2|1]],96*[[1|3],[1|4],[2|2],[2|3],[2|4]],-(1,[3|1],[3|2]),-(1,[4|1],[4|2]),8+[[3|3],[4|3],[4|4]],2*[[3|4]]]
    N = 4
    SinceLast = 753726
    SinceStart = 882418
    T = [[1,2,3,4],[3,4,2,1],[4,3,1,2],[2,1,4,3]] ? 

>   | ?- statistics(cpu_time, [SinceStart, SinceLast]), kenken_4_testcase(N, C), plain_kenken(N, C, T).

    C = [6+[[1|1],[1|2],[2|1]],96*[[1|3],[1|4],[2|2],[2|3],[2|4]],-(1,[3|1],[3|2]),-(1,[4|1],[4|2]),8+[[3|3],[4|3],[4|4]],2*[[3|4]]]
    N = 4
    SinceLast = 122505
    SinceStart = 128692
    T = [[1,2,3,4],[3,4,2,1],[4,3,1,2],[2,1,4,3]] ?

We can see that the performance of plain_kenken/3 is worse than the performance of kenken/3. 

To solve no-op KenKen problem with GUN Prolog, 